{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MINHANH\\\\Occupear\\\\app\\\\src\\\\pages\\\\Login2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst Login2 = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(() => {\n        navigate(\"/\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      ref: form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"username\",\n          value: username,\n          onChange: onChangeUsername,\n          validations: [required]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          validations: [required]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n        style: {\n          display: \"none\"\n        },\n        ref: checkBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login2, \"f17fg4zOXxsDPiI9G1Eynqgopxs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login2;\nexport default Login2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"sources":["C:/Users/MINHANH/Occupear/app/src/pages/Login2.js"],"names":["React","useState","useRef","useNavigate","Form","Input","CheckButton","AuthService","required","value","Login2","navigate","form","checkBtn","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","onChangeUsername","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","login","then","window","location","reload","error","resMessage","response","data","toString","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login2 = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          navigate(\"/\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Login2;\r\n"]},"metadata":{},"sourceType":"module"}