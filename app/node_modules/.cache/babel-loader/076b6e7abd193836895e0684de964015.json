{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MINHANH\\\\Occupear\\\\app\\\\src\\\\pages\\\\EditPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { useNavigate } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst validEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}; // const vpassword = (value) => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\n\nconst EditPage = id => {\n  _s();\n\n  const currentUser = AuthService.getCurrentUser();\n  const form = useRef();\n  const checkBtn = useRef();\n  const history = useNavigate();\n  const [username, setUsername] = useState(currentUser.username);\n  const [email, setEmail] = useState(currentUser.email);\n  const [firstName, setfirstName] = useState(currentUser.firstName);\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangeFirstName = e => {\n    const firstName = e.target.value;\n    setfirstName(firstName);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      UserService.updateUserByID(username, email, firstName).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n        AuthService.logout();\n        history;\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleUpdate,\n      ref: form,\n      children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required, vusername]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"email\",\n            value: email,\n            onChange: onChangeEmail,\n            validations: [required, validEmail]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: onChangeFirstName,\n            validations: [required, vusername]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n          role: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n        style: {\n          display: \"none\"\n        },\n        ref: checkBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPage, \"BRnJR8lsYqoeV/hcRjsjmTxx8Jo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EditPage;\nexport default EditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPage\");","map":{"version":3,"sources":["C:/Users/MINHANH/Occupear/app/src/pages/EditPage.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","useNavigate","AuthService","UserService","required","value","validEmail","vusername","length","EditPage","id","currentUser","getCurrentUser","form","checkBtn","history","username","setUsername","email","setEmail","firstName","setfirstName","password","setPassword","successful","setSuccessful","message","setMessage","onChangeUsername","e","target","onChangeEmail","onChangeFirstName","onChangePassword","handleUpdate","preventDefault","current","validateAll","context","_errors","updateUserByID","then","response","data","logout","error","resMessage","toString","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// const vpassword = (value) => {\r\n//   if (value.length < 6 || value.length > 40) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         The password must be between 6 and 40 characters.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\nconst EditPage = (id) => {\r\n    const currentUser = AuthService.getCurrentUser();\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const history = useNavigate()\r\n  const [username, setUsername] = useState(currentUser.username);\r\n  const [email, setEmail] = useState(currentUser.email);\r\n  const [firstName, setfirstName] = useState(currentUser.firstName);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangeFirstName = (e) => {\r\n    const firstName = e.target.value;\r\n    setfirstName(firstName);\r\n  };\r\n\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      UserService.updateUserByID(username, email, firstName)\r\n      .then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n          AuthService.logout();\r\n          history\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n\r\n        <Form onSubmit={handleUpdate} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">First Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  value={firstName}\r\n                  onChange={onChangeFirstName}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Update</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n"]},"metadata":{},"sourceType":"module"}